import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

const categoriesData = {
    "Saisons et F√™tes": ["Hiver", "Printemps", "√ât√©", "Automne", "No√´l", "Halloween", "P√¢ques"],
    "Th√®mes": ["Animaux", "V√©hicules", "Espace", "Pirates"],
    "√Çge": ["Tout Petits (0-3 ans)", "D√®s 3 ans", "D√®s 6 ans", "D√®s 10 ans"],
    "√âducatif & Trivium": ["Math√©matiques", "Sciences", "Histoire", "Arts"]
};

async function initCategories() {
    try {
        console.log("üîç V√©rification des sections existantes...");
        const existingSections = await prisma.categorySection.findMany();

        if (existingSections.length > 0) {
            console.log("‚úÖ Les sections existent d√©j√†, annulation.");
            return;
        }

        console.log("‚ö° Cr√©ation des sections et sous-cat√©gories...");

        for (const [sectionName, subcategories] of Object.entries(categoriesData)) {
            // 1Ô∏è‚É£ Cr√©er une **section** (CategorySection)
            const section = await prisma.categorySection.create({
                data: {
                    name: sectionName,
                    description: `Section pour ${sectionName}`,
                    iconSrc: null,
                },
            });

            console.log(`‚úÖ Section cr√©√©e : ${section.name}`);

            // 2Ô∏è‚É£ Ajouter les **sous-cat√©gories** associ√©es
            for (const subName of subcategories) {
                const subCategory = await prisma.drawingCategory.create({
                    data: {
                        name: subName,
                        sectionId: section.id, // Relie la sous-cat√©gorie √† la section
                        parentId: null, // Pas de parent, ce sont des cat√©gories principales
                    },
                });
                console.log(`‚û°Ô∏è Sous-cat√©gorie cr√©√©e : ${subCategory.name} sous ${sectionName}`);
            }
        }

        console.log("üéâ Cat√©gories et sous-cat√©gories ins√©r√©es avec succ√®s !");
    } catch (error) {
        console.error("‚ùå Erreur d'initialisation :", error);
    } finally {
        await prisma.$disconnect();
    }
}

initCategories();
