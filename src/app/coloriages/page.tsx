"use client";

import { useEffect, useState } from "react";
import Head from "next/head";
import BackToTop from "@/components/BackToTop/BackToTop";
import FloatingIcons from "@/components/FloatingIcon/FloatingIcons";
import Banner from "@/components/Banner/Banner";
import DrawingCard from "@/components/DrawingCard/DrawingCard";
import { Drawing } from "@/types/drawing";

// üéØ Gestion des cat√©gories et sous-cat√©gories
const categoriesData = {
    "Saisons et F√™tes": ["Hiver", "Printemps", "√ât√©", "Automne", "No√´l", "Halloween", "P√¢ques"],
    "Th√®mes": ["Animaux", "V√©hicules", "Espace", "Pirates"],
    "√Çge": ["Tout Petits (0-3 ans)", "D√®s 3 ans", "D√®s 6 ans", "D√®s 10 ans"],
    "√âducatif & Trivium": [
        "Grammaire - Lettres",
        "Grammaire - Mots",
        "Grammaire - Chiffres",
        "Logique - Puzzle",
        "Logique - Coloriages num√©rot√©s",
        "Logique - Labyrinthe",
        "Rh√©torique - Histoires",
        "Rh√©torique - Mythologie",
        "Rh√©torique - Philosophie"
    ]
};

// üî• D√©tection de la saison actuelle pour afficher les coloriages correspondants
const getCurrentSeason = () => {
    const month = new Date().getMonth() + 1; // Janvier = 1, F√©vrier = 2...
    if ([12, 1, 2].includes(month)) return "Hiver";
    if ([3, 4, 5].includes(month)) return "Printemps";
    if ([6, 7, 8].includes(month)) return "√ât√©";
    if ([9, 10, 11].includes(month)) return "Automne";
    return "√ât√©";
};

export default function ColoragesPage() {
    const [drawings, setDrawings] = useState<Drawing[]>([]);
    const currentSeason = getCurrentSeason();

    useEffect(() => {
        fetch("/api/drawings")
            .then((res) => res.json())
            .then((data) => {
                console.log("üì• Donn√©es API re√ßues :", data); // üîç V√©rifie les cat√©gories des coloriages
                setDrawings(data);
            })
            .catch((error) => console.error("‚ùå Erreur lors du fetch :", error));
    }, []);


    return (
        <>
            <Head>
                <title>Coloriages √† imprimer ‚ú® - Dessins gratuits √† t√©l√©charger</title>
                <meta name="description" content="D√©couvrez des centaines de coloriages √† imprimer et √† colorier ! Th√®mes vari√©s : animaux, mandalas, h√©ros, saisons et bien plus encore. Imprimez gratuitement !" />
                <meta name="keywords" content="coloriage √† imprimer, dessin √† colorier, coloriage enfant, mandalas, h√©ros, saison" />
                <meta property="og:title" content="Coloriages √† imprimer ‚ú® - Dessins gratuits √† t√©l√©charger" />
                <meta property="og:description" content="Des centaines de coloriages gratuits √† imprimer et √† colorier. Explorez nos th√®mes : animaux, mandalas, h√©ros et bien plus encore !" />
                <meta property="og:image" content="/assets/slide3.png" />
                <meta property="og:url" content="https://ton-site.com/coloriages" />
                <meta name="twitter:card" content="summary_large_image" />
            </Head>

            <header className="coloriages__header">
                <Banner
                    src="/assets/slide3.png"
                    title="üí° Coloriages √† imprimer"
                    description="D√©couvrez des centaines de coloriages √† imprimer et √† colorier ! Choisissez parmi des th√®mes vari√©s : animaux, mandalas, h√©ros, saisons et bien plus encore."
                    buttons={[
                        { label: "üìÖ Explorer les coloriages", href: "/coloriages/explorer" }, // ‚úÖ Redirection externe
                        { label: "üîç Rechercher un th√®me", targetId: "themes" }, // ‚úÖ Scroll vers section
                    ]}
                />
            </header>



            <main className="coloriages__container">
                <FloatingIcons />
                <BackToTop />

                {/* 1Ô∏è‚É£ Coloriages de saison */}
                <section id="saisons" className="coloriages__theme-section">
                    <h2>üìÖ Coloriages de {currentSeason}</h2>
                    <p>Retrouvez les coloriages li√©s √† la saison actuelle et aux f√™tes du moment.</p>
                    <div className="coloriages__theme-grid">
                        {drawings
                            .filter(d => d.category?.name === currentSeason)
                            .map(drawing => (
                                <DrawingCard key={drawing.id} id={drawing.id} imageUrl={drawing.imageUrl} theme={drawing.title} views={drawing.views ?? 0} likes={drawing.likes ?? 0} />
                            ))}
                    </div>
                </section>

                {/* 2Ô∏è‚É£ Coloriages par th√®me */}
                <section id="themes" className="coloriages__theme-section">
                    <h2>üé® Coloriages par th√®me</h2>
                    {categoriesData.Th√®mes.map((theme) => (
                        <div key={theme}>
                            <h3>üñç {theme}</h3>
                            <div className="coloriages__theme-grid">
                                {drawings
                                    .filter(d => d.category?.name === theme)
                                    .map(drawing => (
                                        <DrawingCard key={drawing.id} id={drawing.id} imageUrl={drawing.imageUrl} theme={drawing.title} views={drawing.views ?? 0} likes={drawing.likes ?? 0} />
                                    ))}
                            </div>
                        </div>
                    ))}
                </section>

                {/* 3Ô∏è‚É£ Coloriages par √¢ge */}
                <section id="ages" className="coloriages__theme-section">
                    <h2>üë∂ Coloriages par √¢ge</h2>
                    {Object.entries(categoriesData["√Çge"]).map(([label, category]) => (
                        <div key={category}>
                            <h3>üñç {label}</h3>
                            <div className="coloriages__theme-grid">
                                {drawings
                                    .filter(d => d.category?.name === category)
                                    .map(drawing => (
                                        <DrawingCard key={drawing.id} id={drawing.id} imageUrl={drawing.imageUrl} theme={drawing.title} views={drawing.views ?? 0} likes={drawing.likes ?? 0} />
                                    ))}
                            </div>
                        </div>
                    ))}
                </section>

                {/* 4Ô∏è‚É£ Coloriages √©ducatifs (Trivium) üìö */}
                <section id="educatif" className="coloriages__theme-section">
                    <h2>üìö Coloriages √©ducatifs (Trivium)</h2>

                    {categoriesData["√âducatif & Trivium"].map(sub => {
                        const subDrawings = drawings.filter(d => d.category?.name === sub);
                        console.log(`üñç ${sub} ->`, subDrawings); // üîç V√©rifie si les coloriages sont bien r√©cup√©r√©s

                        return (
                            <div key={sub}>
                                <h3>üñç {sub}</h3>
                                <div className="coloriages__theme-grid">
                                    {subDrawings.length > 0 ? (
                                        subDrawings.map(drawing => (
                                            <DrawingCard
                                                key={drawing.id}
                                                id={drawing.id}
                                                imageUrl={drawing.imageUrl}
                                                theme={drawing.title}
                                                views={drawing.views ?? 0}
                                                likes={drawing.likes ?? 0}
                                            />
                                        ))
                                    ) : (
                                        <p>‚è≥ Aucun coloriage disponible pour le moment...</p>
                                    )}
                                </div>
                            </div>
                        );
                    })}
                </section>



            </main>
        </>
    );
}
